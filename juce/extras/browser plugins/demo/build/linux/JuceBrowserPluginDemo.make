# C++ Shared Library Makefile autogenerated by premake
# Don't edit this file! Instead edit `premake.lua` then rerun `make`

ifndef CONFIG
  CONFIG=Debug
endif

# if multiple archs are defined turn off automated dependency generation
DEPFLAGS := $(if $(word 2, $(TARGET_ARCH)), , -MMD)

ifeq ($(CONFIG),Debug)
  BINDIR := build
  LIBDIR := build
  OBJDIR := build/intermediate/Debug
  OUTDIR := build
  CPPFLAGS := $(DEPFLAGS) -D "LINUX=1" -D "DEBUG=1" -D "_DEBUG=1" -I "../../src/" -I "../../../wrapper/" -I "/usr/include/" -I "/usr/include/freetype2/" -I "/usr/include/nspr/" -I "/usr/include/xulrunner-1.9/stable/"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -fPIC -g -L/usr/lib/xulrunner -ggdb -Wall
  CXXFLAGS += $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared -L"/usr/X11R6/lib/" -lfreetype -lpthread -lrt -lX11 -lXss -lGL -lGLU -lXinerama -lasound
  LDDEPS :=
  RESFLAGS := -D "LINUX=1" -D "DEBUG=1" -D "_DEBUG=1" -I "../../src/" -I "../../../wrapper/" -I "/usr/include/" -I "/usr/include/freetype2/" -I "/usr/include/nspr/" -I "/usr/include/xulrunner-1.9/stable/"
  TARGET := libJuceBrowserPluginDemo.so
 BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)

  define postbuildcmd
	@echo Running post-build commands...
	sudo cp build/libJuceBrowserPluginDemo.so /usr/lib/nsbrowser/plugins/
	sudo cp build/libJuceBrowserPluginDemo.so /opt/opera/lib/opera/plugins/
  endef
endif

ifeq ($(CONFIG),Release)
  BINDIR := build
  LIBDIR := build
  OBJDIR := build/intermediate/Release
  OUTDIR := build
  CPPFLAGS := $(DEPFLAGS) -D "LINUX=1" -D "NDEBUG=1" -I "../../src/" -I "../../../wrapper/" -I "/usr/include/" -I "/usr/include/freetype2/" -I "/usr/include/nspr/" -I "/usr/include/xulrunner-1.9/stable/"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -fPIC -O2 -L/usr/lib/xulrunner -O2 -Wall -fvisibility=hidden
  CXXFLAGS += $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared -s -L"/usr/X11R6/lib/" -lfreetype -lpthread -lrt -lX11 -lXss -lGL -lGLU -lXinerama -lasound
  LDDEPS :=
  RESFLAGS := -D "LINUX=1" -D "NDEBUG=1" -I "../../src/" -I "../../../wrapper/" -I "/usr/include/" -I "/usr/include/freetype2/" -I "/usr/include/nspr/" -I "/usr/include/xulrunner-1.9/stable/"
  TARGET := libJuceBrowserPluginDemo.so
 BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)

  define postbuildcmd
	@echo Running post-build commands...
	sudo cp build/libJuceBrowserPluginDemo.so /usr/lib/nsbrowser/plugins/
	sudo cp build/libJuceBrowserPluginDemo.so /opt/opera/lib/opera/plugins/
  endef
endif

OBJECTS := \
	$(OBJDIR)/JuceBrowserPluginDemo.o \
	$(OBJDIR)/juce_LibrarySource.o \
	$(OBJDIR)/juce_ActiveX_GlueCode.o \
	$(OBJDIR)/juce_NPAPI_GlueCode.o \

MKDIR_TYPE := msdos
CMD := $(subst \,\\,$(ComSpec)$(COMSPEC))
ifeq (,$(CMD))
  MKDIR_TYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  MKDIR_TYPE := posix
endif
ifeq ($(MKDIR_TYPE),posix)
  CMD_MKBINDIR := mkdir -p $(BINDIR)
  CMD_MKLIBDIR := mkdir -p $(LIBDIR)
  CMD_MKOUTDIR := mkdir -p $(OUTDIR)
  CMD_MKOBJDIR := mkdir -p $(OBJDIR)
else
  CMD_MKBINDIR := $(CMD) /c if not exist $(subst /,\\,$(BINDIR)) mkdir $(subst /,\\,$(BINDIR))
  CMD_MKLIBDIR := $(CMD) /c if not exist $(subst /,\\,$(LIBDIR)) mkdir $(subst /,\\,$(LIBDIR))
  CMD_MKOUTDIR := $(CMD) /c if not exist $(subst /,\\,$(OUTDIR)) mkdir $(subst /,\\,$(OUTDIR))
  CMD_MKOBJDIR := $(CMD) /c if not exist $(subst /,\\,$(OBJDIR)) mkdir $(subst /,\\,$(OBJDIR))
endif

.PHONY: clean

$(OUTDIR)/$(TARGET): $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking JuceBrowserPluginDemo
	-@$(CMD_MKBINDIR)
	-@$(CMD_MKLIBDIR)
	-@$(CMD_MKOUTDIR)
	@$(BLDCMD)
	$(postbuildcmd)

clean:
	@echo Cleaning JuceBrowserPluginDemo
ifeq ($(MKDIR_TYPE),posix)
	-@rm -f $(OUTDIR)/$(TARGET)
	-@rm -rf $(OBJDIR)
else
	-@if exist $(subst /,\,$(OUTDIR)/$(TARGET)) del /q $(subst /,\,$(OUTDIR)/$(TARGET))
	-@if exist $(subst /,\,$(OBJDIR)) del /q $(subst /,\,$(OBJDIR))
	-@if exist $(subst /,\,$(OBJDIR)) rmdir /s /q $(subst /,\,$(OBJDIR))
endif

$(OBJDIR)/JuceBrowserPluginDemo.o: ../../src/JuceBrowserPluginDemo.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o "$@" -c "$<"

$(OBJDIR)/juce_LibrarySource.o: ../../src/juce_LibrarySource.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o "$@" -c "$<"

$(OBJDIR)/juce_ActiveX_GlueCode.o: ../../../wrapper/juce_ActiveX_GlueCode.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o "$@" -c "$<"

$(OBJDIR)/juce_NPAPI_GlueCode.o: ../../../wrapper/juce_NPAPI_GlueCode.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)

